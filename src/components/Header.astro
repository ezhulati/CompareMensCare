---
const healthConcerns = [
  { title: 'ED & Sexual Performance', href: '/sexual-health' },
  { title: 'Hair Loss & Thinning', href: '/hair-health' },
  { title: 'Low T & Energy', href: '/testosterone' },
  { title: 'Weight & Metabolism', href: '/weight-loss' },
  { title: 'Anxiety & Depression', href: '/mental-health' },
  { title: 'Sleep Problems', href: '/sleep' },
  { title: 'Herpes & Outbreaks', href: '/herpes' },
  { title: 'Peptide Therapy', href: '/peptides' },
  { title: 'Health Testing', href: '/diagnostics' },
];

const resources = [
  { title: 'Treatment Guides', href: '/guides' },
  { title: 'Research & Articles', href: '/blog' },
  { title: 'Our Expert Team', href: '/team' },
];

const comparisons = {
  'Sexual Health': [
    { title: 'Ro vs Hims', href: '/compare/ro-vs-hims' },
    { title: 'BlueChew vs Hims', href: '/compare/bluechew-vs-hims' },
    { title: 'BlueChew vs Ro', href: '/compare/bluechew-vs-ro' },
    { title: 'Vault Health vs Hims', href: '/compare/vault-health-vs-hims' },
    { title: 'Vault Health vs Ro', href: '/compare/vault-health-vs-ro' },
  ],
  'Mental Health': [
    { title: 'BetterHelp vs Talkspace', href: '/compare/betterhelp-vs-talkspace' },
    { title: 'Cerebral vs BetterHelp', href: '/compare/cerebral-vs-betterhelp' },
    { title: 'Talkspace vs Cerebral', href: '/compare/talkspace-vs-cerebral' },
    { title: 'Teladoc vs BetterHelp', href: '/compare/teladoc-vs-betterhelp' },
    { title: 'Cerebral vs Talkspace', href: '/compare/cerebral-vs-talkspace' },
  ],
  'Weight Loss': [
    { title: 'Henry Meds vs Ro', href: '/compare/henry-meds-vs-ro' },
    { title: 'Henry Meds vs Hims', href: '/compare/henry-meds-vs-hims' },
    { title: 'Hims vs Ro', href: '/compare/hims-vs-ro' },
    { title: 'Hone Health vs Henry Meds', href: '/compare/hone-health-vs-henry-meds' },
    { title: 'Vault Health vs Henry Meds', href: '/compare/vault-health-vs-henry-meds' },
  ],
  'Hair Loss': [
    { title: 'Keeps vs Hims', href: '/compare/keeps-vs-hims' },
    { title: 'Keeps vs Ro', href: '/compare/keeps-vs-ro' },
    { title: 'Keeps vs Manual', href: '/compare/keeps-vs-manual' },
  ],
  'Testosterone': [
    { title: 'Hone Health vs Hims', href: '/compare/hone-health-vs-hims' },
    { title: 'Hone Health vs Vault Health', href: '/compare/hone-health-vs-vault-health' },
    { title: 'Hone Health vs Ro', href: '/compare/hone-health-vs-ro' },
  ],
  'Diagnostics': [
    { title: 'Everlywell vs LetsGetChecked', href: '/compare/everlywell-vs-letsgetchecked' },
    { title: 'Hone Health vs Everlywell', href: '/compare/hone-health-vs-everlywell' },
    { title: 'Vault Health vs Everlywell', href: '/compare/vault-health-vs-everlywell' },
    { title: 'imaware vs Everlywell', href: '/compare/imaware-vs-everlywell' },
  ],
  'Peptides': [
    { title: 'TeleWellnessMD vs Body Balance Medical', href: '/compare/telewellnessmd-vs-body-balance-medical' },
    { title: 'Integrative Peptides vs TeleWellnessMD', href: '/compare/integrative-peptides-vs-telewellnessmd' },
    { title: 'Body Balance Medical vs Hone Health', href: '/compare/body-balance-medical-vs-hone-health' },
  ],
};

const currentPath = Astro.url.pathname;
---

<header class="sticky top-0 z-50 border-b border-slate-200/80 shadow-soft" style="background: rgba(255, 255, 255, 0.92); backdrop-filter: blur(16px) saturate(180%);">
  <nav class="container-custom">
    <div class="flex items-center justify-between h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center space-x-3 group">
          <!-- SVG Icon -->
          <div class="w-11 h-11 flex-shrink-0 text-brand-accent group-hover:text-brand-primary transition-colors duration-300">
            <svg viewBox="0 0 954.77 763.3" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-full h-full">
              <path d="M569.03,682.81l21.51-107.76-25.74-103.87,31.32,95.03,15.03-3.93,45.89-38.53-42.2,44.08,20.47,25.06s-11-9.35-15.14-12.45l-27.44,57.29-12,48.61-22.06,39.71,10.65,37.26h37.28l-5.87-6.44,12.41-89.36,118.11-148.1v-25.44l-104.25-56.47-63.21,5.66-10.36,21.16,3.96-21.13,3.75-42.49,88.5-154.6-23.54,54.58,52.24-24.6,48.95-42.09,34.7-63.97,1.89-50.46-13.03-54.07-2.19-36.49-4.45-23.08-24.4-5.93-16.84,18.75-2.45,17.56,23.79,27.84.66,54.75-25.12,27.08,2.78,50.06-14.98-15.14-63.69,13.6-7.16,10.02-25.05-.72-39.86,11.83,31.27-16.12-28.07-12.33-20.36,19.48-23.61-6.26.54-4.83,23.06,10.77,21.33-34.04,13.86,6-1.86-35.65-6.14,4.14-19.31-16.07,4.55-3.1,24.96,9.38,4.83-31.1,21-13.41-81.85-41.54-18.75.24-33.55,53.26.83,38.68,5.7,5.31-10.26,30.3-29.34,15.74,45.59,23.99-54.89-18.27-54.28,24.66-30.19,26.25,41.13,34.13-46.91,23.12,4.29-6.67,42.52-16.46-52.61-38.03-42.94,20.04-6.06,9.27-18.29,46.79,12.7-49.41-19.36-31.46,11.31-53.57,28.76-22.67,1.02-17.7-12.86-21.67-25.09,1.06-8.86,21.77-9.26,35.36-23.32,50.5-7.98,49.86,20.51,69.66,20.04,4.77,36.26-5.73,30.53-14.79-22.47,15.74,38.21,3.82,21.85-11.65,30.63-33.91-17.18,36.14,44.37,38.53,27.57,47.46,80.19,20.57-78.5-11.74-13.09,53.22,30.62,50.68,39.44,25.58-35.3-15.24-4.97,76.12,38.93,107.39-12.24-14.1-85.84-19.86s-16.45,33.48-24.51,47.13l4.24-20.24-65.16-1.04-20.89-21.72-91.4,51.12h332.77l39.25-80.49ZM713.49,207.44l3.49,3.39-42.14,19.75,38.65-23.14ZM387.09,292.9l125,31.66,6.92,9.25-131.92-40.91ZM529.04,322.41l93.97-47.04-98.54,57.73-4.99-89.22,9.56,78.53Z"/>
              <polygon points="615.99 763.3 954.77 763.3 617.99 746.78 615.99 763.3"/>
              <polygon points="176.77 763.3 0 763.3 205.75 746.78 176.77 763.3"/>
            </svg>
          </div>
          <!-- Logo Text -->
          <span class="text-2xl" style="font-family: 'Montserrat', sans-serif; letter-spacing: -0.015em;">
            <span style="font-weight: 300;" class="text-slate-600">Compare</span><span style="font-weight: 900;" class="text-brand-accent group-hover:text-brand-primary transition-colors duration-300">Mens</span><span style="font-weight: 600;" class="text-slate-900">Care</span>
          </span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden lg:flex lg:items-center lg:space-x-6">
        <!-- What's your concern? Dropdown -->
        <div class="relative group">
          <button
            type="button"
            class="flex items-center space-x-1 text-sm font-medium text-gray-700 hover:text-brand-primary transition-colors"
            aria-expanded="false"
            aria-haspopup="true"
          >
            <span>What's your concern?</span>
            <svg class="w-4 h-4 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
          <div class="absolute left-0 mt-2 w-56 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
            <div class="bg-white rounded-lg shadow-lg border border-slate-200 py-2">
              {healthConcerns.map((concern) => (
                <a
                  href={concern.href}
                  class:list={[
                    'block px-4 py-2.5 text-sm font-medium transition-colors',
                    currentPath.startsWith(concern.href)
                      ? 'text-brand-primary bg-blue-50'
                      : 'text-gray-700 hover:text-brand-primary hover:bg-gray-50'
                  ]}
                >
                  {concern.title}
                </a>
              ))}
            </div>
          </div>
        </div>

        <!-- Compare Services Dropdown -->
        <div class="relative group">
          <button
            type="button"
            class="flex items-center space-x-1 text-sm font-medium text-gray-700 hover:text-brand-primary transition-colors"
            aria-expanded="false"
            aria-haspopup="true"
          >
            <span>Compare Services</span>
            <svg class="w-4 h-4 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
          <div class="absolute left-0 mt-2 w-72 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50 max-h-[500px] overflow-y-auto">
            <div class="bg-white rounded-lg shadow-lg border border-slate-200 py-3">
              <div class="px-4 py-2 text-xs font-semibold text-gray-500 uppercase tracking-wider border-b border-slate-100">
                View All Comparisons
              </div>
              <a href="/compare" class="block px-4 py-2 text-sm text-brand-accent hover:bg-blue-50 font-medium">
                â†’ Browse All Comparisons
              </a>
              {Object.entries(comparisons).map(([category, items], index) => (
                <div class="mt-2 border-t border-slate-100">
                  <button
                    type="button"
                    class="comparison-category-toggle w-full px-4 py-2.5 text-left flex items-center justify-between hover:bg-gray-50 transition-colors"
                    data-category={category.toLowerCase().replace(/\s+/g, '-')}
                    aria-expanded="false"
                  >
                    <span class="text-xs font-semibold text-gray-700 uppercase tracking-wider">
                      {category} ({items.length})
                    </span>
                    <svg class="w-4 h-4 text-gray-500 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                    </svg>
                  </button>
                  <div class="comparison-category-items hidden" data-category={category.toLowerCase().replace(/\s+/g, '-')}>
                    {items.map((item) => (
                      <a
                        href={item.href}
                        class:list={[
                          'block px-4 py-2 text-sm transition-colors',
                          currentPath === item.href
                            ? 'text-brand-primary bg-blue-50 font-medium'
                            : 'text-gray-700 hover:text-brand-primary hover:bg-gray-50'
                        ]}
                      >
                        {item.title}
                      </a>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        <!-- Resources Dropdown -->
        <div class="relative group">
          <button
            type="button"
            class="flex items-center space-x-1 text-sm font-medium text-gray-700 hover:text-brand-primary transition-colors"
            aria-expanded="false"
            aria-haspopup="true"
          >
            <span>Resources</span>
            <svg class="w-4 h-4 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
          <div class="absolute left-0 mt-2 w-52 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
            <div class="bg-white rounded-lg shadow-lg border border-slate-200 py-2">
              {resources.map((resource) => (
                <a
                  href={resource.href}
                  class:list={[
                    'block px-4 py-2.5 text-sm font-medium transition-colors',
                    currentPath.startsWith(resource.href)
                      ? 'text-brand-primary bg-blue-50'
                      : 'text-gray-700 hover:text-brand-primary hover:bg-gray-50'
                  ]}
                >
                  {resource.title}
                </a>
              ))}
            </div>
          </div>
        </div>
      </div>

      <!-- Find My Match CTA -->
      <div class="hidden md:flex items-center">
        <a
          href="/#match"
          class="px-6 py-2.5 bg-brand-accent text-white text-sm font-semibold rounded-lg hover:bg-blue-700 transition-colors shadow-sm hover:shadow-md"
        >
          Find My Match
        </a>
      </div>

      <!-- Mobile menu button -->
      <button
        type="button"
        class="lg:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:text-brand-primary hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-brand-primary"
        aria-label="Toggle navigation menu"
        aria-expanded="false"
        aria-controls="mobile-menu"
        id="mobile-menu-button"
      >
        <svg
          class="h-6 w-6"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"
          />
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div class="lg:hidden hidden" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-3">
        <!-- Find My Match CTA -->
        <a
          href="/#match"
          class="block px-4 py-3 bg-brand-accent text-white text-center font-semibold rounded-lg hover:bg-blue-700 transition-colors"
        >
          Find My Match
        </a>

        <!-- Health Concerns Section -->
        <div class="pt-2">
          <div class="px-3 py-2 text-xs font-semibold text-gray-500 uppercase tracking-wider">
            What's your concern?
          </div>
          {healthConcerns.map((concern) => (
            <a
              href={concern.href}
              class:list={[
                'block px-3 py-2 rounded-md text-base font-medium',
                currentPath.startsWith(concern.href)
                  ? 'bg-brand-primary text-white'
                  : 'text-gray-700 hover:bg-gray-100'
              ]}
            >
              {concern.title}
            </a>
          ))}
        </div>

        <!-- Compare Services Section -->
        <div class="pt-2 border-t border-gray-200">
          <div class="px-3 py-2 text-xs font-semibold text-gray-500 uppercase tracking-wider">
            Compare Services
          </div>
          <a
            href="/compare"
            class="block px-3 py-2 rounded-md text-sm font-medium text-brand-accent hover:bg-blue-50"
          >
            â†’ Browse All Comparisons
          </a>
          {Object.entries(comparisons).map(([category, items]) => (
            <div class="mt-3">
              <button
                type="button"
                class="comparison-category-toggle-mobile w-full px-3 py-2 text-left flex items-center justify-between hover:bg-gray-50 rounded-md transition-colors"
                data-category={category.toLowerCase().replace(/\s+/g, '-')}
                aria-expanded="false"
              >
                <span class="text-xs font-semibold text-gray-700 uppercase tracking-wider">
                  {category} ({items.length})
                </span>
                <svg class="w-4 h-4 text-gray-500 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
              </button>
              <div class="comparison-category-items-mobile hidden" data-category={category.toLowerCase().replace(/\s+/g, '-')}>
                {items.map((item) => (
                  <a
                    href={item.href}
                    class:list={[
                      'block px-3 py-2 rounded-md text-sm',
                      currentPath === item.href
                        ? 'bg-brand-primary text-white font-medium'
                        : 'text-gray-700 hover:bg-gray-100'
                    ]}
                  >
                    {item.title}
                  </a>
                ))}
              </div>
            </div>
          ))}
        </div>

        <!-- Resources Section -->
        <div class="pt-2 border-t border-gray-200">
          <div class="px-3 py-2 text-xs font-semibold text-gray-500 uppercase tracking-wider">
            Resources
          </div>
          {resources.map((resource) => (
            <a
              href={resource.href}
              class:list={[
                'block px-3 py-2 rounded-md text-base font-medium',
                currentPath.startsWith(resource.href)
                  ? 'bg-brand-primary text-white'
                  : 'text-gray-700 hover:bg-gray-100'
              ]}
            >
              {resource.title}
            </a>
          ))}
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  // Mobile menu toggle with accessibility
  const button = document.getElementById('mobile-menu-button');
  const menu = document.getElementById('mobile-menu');

  button?.addEventListener('click', () => {
    const isExpanded = button.getAttribute('aria-expanded') === 'true';

    // Toggle menu visibility
    menu?.classList.toggle('hidden');

    // Update aria-expanded
    button.setAttribute('aria-expanded', String(!isExpanded));

    // Focus management: focus first menu item when opening
    if (!isExpanded) {
      const firstMenuItem = menu?.querySelector('a');
      firstMenuItem?.focus();
    }
  });

  // Close menu when clicking outside
  document.addEventListener('click', (event) => {
    const target = event.target as HTMLElement;
    if (!button?.contains(target) && !menu?.contains(target)) {
      menu?.classList.add('hidden');
      button?.setAttribute('aria-expanded', 'false');
    }
  });

  // Close menu on escape key
  document.addEventListener('keydown', (event) => {
    if (event.key === 'Escape' && !menu?.classList.contains('hidden')) {
      menu?.classList.add('hidden');
      button?.setAttribute('aria-expanded', 'false');
      button?.focus();
    }
  });

  // Desktop comparison category accordion
  document.querySelectorAll('.comparison-category-toggle').forEach(toggle => {
    toggle.addEventListener('click', (e) => {
      const button = e.currentTarget as HTMLButtonElement;
      const category = button.dataset.category;
      const items = document.querySelector(`.comparison-category-items[data-category="${category}"]`);
      const icon = button.querySelector('svg');
      const isExpanded = button.getAttribute('aria-expanded') === 'true';

      // Toggle visibility
      items?.classList.toggle('hidden');

      // Rotate icon
      icon?.classList.toggle('rotate-180');

      // Update aria-expanded
      button.setAttribute('aria-expanded', String(!isExpanded));
    });
  });

  // Mobile comparison category accordion
  document.querySelectorAll('.comparison-category-toggle-mobile').forEach(toggle => {
    toggle.addEventListener('click', (e) => {
      const button = e.currentTarget as HTMLButtonElement;
      const category = button.dataset.category;
      const items = document.querySelector(`.comparison-category-items-mobile[data-category="${category}"]`);
      const icon = button.querySelector('svg');
      const isExpanded = button.getAttribute('aria-expanded') === 'true';

      // Toggle visibility
      items?.classList.toggle('hidden');

      // Rotate icon
      icon?.classList.toggle('rotate-180');

      // Update aria-expanded
      button.setAttribute('aria-expanded', String(!isExpanded));
    });
  });
</script>
