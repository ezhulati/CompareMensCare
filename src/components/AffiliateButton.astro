---
import { trackAffiliateClick } from '../utils/helpers';

export interface Props {
  brand: string;
  text?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  location?: string;
  class?: string;
}

const {
  brand,
  text = 'Check Price',
  variant = 'primary',
  size = 'md',
  location = 'unknown',
  class: className = '',
} = Astro.props;

const sizeClasses = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-6 py-3 text-base',
  lg: 'px-8 py-4 text-lg',
};

const variantClasses = {
  primary: 'btn-primary',
  secondary: 'btn-secondary',
  outline: 'btn-outline',
};
---

<a
  href={`/go/${brand}`}
  rel="nofollow sponsored"
  target="_blank"
  class:list={[
    'btn',
    variantClasses[variant],
    sizeClasses[size],
    'affiliate-link',
    className
  ]}
  data-brand={brand}
  data-location={location}
>
  {text}
  <svg
    class="w-4 h-4 ml-2"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
    ></path>
  </svg>
</a>

<script>
  import { trackAffiliateClick } from '../utils/helpers';

  // Track affiliate clicks
  document.querySelectorAll('.affiliate-link').forEach((link) => {
    link.addEventListener('click', (e) => {
      const target = e.currentTarget as HTMLAnchorElement;
      const brand = target.dataset.brand || 'unknown';
      const location = target.dataset.location || 'unknown';
      trackAffiliateClick(brand, location);
    });
  });
</script>
