---
import { getCollection, getEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Icon from '../../components/Icon.astro';
import type { GetStaticPaths } from 'astro';

export const prerender = false; // SSR mode

export const getStaticPaths = (async () => {
  const comparisons = await getCollection('comparisons');
  return comparisons.map(comparison => ({
    params: { slug: comparison.slug },
    props: { comparison },
  }));
}) satisfies GetStaticPaths;

const { comparison } = Astro.props;
const { Content } = await comparison.render();

// Fetch brand data
const brand1Entry = await getEntry('brands', comparison.data.brand1);
const brand2Entry = await getEntry('brands', comparison.data.brand2);

if (!brand1Entry || !brand2Entry) {
  return Astro.redirect('/404');
}

const brand1 = brand1Entry.data;
const brand2 = brand2Entry.data;

// Category name mapping
const categoryNames: Record<string, string> = {
  'sexual-health': 'ED Treatment',
  'hair-health': 'Hair Loss',
  'testosterone': 'Testosterone Therapy',
  'weight-loss': 'Weight Loss',
  'mental-health': 'Mental Health',
  'diagnostics': 'Lab Testing',
  'sleep': 'Sleep & Insomnia',
  'herpes': 'Herpes Treatment',
  'peptides': 'Peptide Therapy',
};

const categoryName = categoryNames[comparison.data.category] || comparison.data.category;

// Schema for comparison
const schema = {
  '@context': 'https://schema.org',
  '@type': 'MedicalWebPage',
  name: comparison.data.title,
  description: comparison.data.description,
  author: {
    '@type': 'Person',
    name: comparison.data.writtenBy,
    jobTitle: comparison.data.writtenByCredentials,
  },
  reviewedBy: {
    '@type': 'Person',
    name: comparison.data.medicalReviewer,
    jobTitle: comparison.data.medicalReviewerCredentials,
  },
  datePublished: comparison.data.publishDate.toISOString(),
  dateModified: comparison.data.lastReviewed.toISOString(),
};
---

<BaseLayout title={comparison.data.title} description={comparison.data.description} schema={schema}>
  <!-- Breadcrumb -->
  <section class="bg-white py-6 border-b border-slate-200">
    <div class="container-custom">
      <div class="flex items-center gap-2 text-sm text-slate-600 px-4">
        <a href="/" class="hover:text-brand-accent transition-colors">Home</a>
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
        <a href="/compare" class="hover:text-brand-accent transition-colors">Compare</a>
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
        <span class="text-slate-900 font-medium">{brand1.title} vs {brand2.title}</span>
      </div>
    </div>
  </section>

  <!-- Hero Section -->
  <section class="bg-white py-12 lg:py-16 border-b border-slate-200">
    <div class="container-custom">
      <div class="max-w-4xl mx-auto text-center">
        <div class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-slate-100 text-slate-700 text-sm font-medium mb-6 border border-slate-200">
          <span class="w-2 h-2 bg-blue-500 rounded-full"></span>
          {categoryName} Comparison
        </div>

        <h1 class="text-4xl lg:text-5xl font-bold text-slate-900 mb-4">
          {brand1.title} <span class="text-slate-400">vs</span> {brand2.title}
        </h1>
        <p class="text-xl text-slate-600 mb-8">
          Side-by-side comparison for {categoryName.toLowerCase()}
        </p>

        {comparison.data.verdict && (
          <div class="bg-slate-50 rounded-xl p-6 border border-slate-200">
            <div class="text-sm font-semibold text-slate-500 uppercase tracking-wide mb-4">
              The Bottom Line
            </div>
            <div class="grid md:grid-cols-2 gap-6">
              <div class="text-left">
                <div class="font-bold text-lg text-slate-900 mb-2">{brand1.title}</div>
                <p class="text-slate-600">{comparison.data.verdict.brand1BestFor}</p>
              </div>
              <div class="text-left">
                <div class="font-bold text-lg text-slate-900 mb-2">{brand2.title}</div>
                <p class="text-slate-600">{comparison.data.verdict.brand2BestFor}</p>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  </section>

  <!-- Quick Overview Cards -->
  <section class="section bg-white">
    <div class="container-custom">
      <h2 class="text-2xl font-bold text-slate-900 mb-6">Quick Overview</h2>
      <div class="grid lg:grid-cols-2 gap-6">
        <!-- Brand 1 Card -->
        <div class="card p-6">
          <div class="flex items-center gap-4 mb-4">
            <div class="flex-1">
              <h3 class="text-2xl font-bold text-slate-900">{brand1.title}</h3>
              <div class="flex items-center gap-2 mt-1">
                <div class="flex items-center">
                  {Array.from({ length: 5 }).map((_, i) => (
                    <svg
                      class={`w-4 h-4 ${i < Math.floor(brand1.rating) ? 'text-yellow-400' : 'text-slate-300'}`}
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                  ))}
                </div>
                <span class="text-sm text-slate-600">{brand1.rating}/5</span>
              </div>
            </div>
          </div>

          <div class="space-y-3 mb-4">
            <div class="flex justify-between">
              <span class="text-slate-600">Consultation:</span>
              <span class="font-semibold text-slate-900">{brand1.pricing.consultationFee}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-slate-600">From:</span>
              <span class="font-semibold text-slate-900">{brand1.pricing.medicationFrom || brand1.pricing.consultationFee}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-slate-600">Subscription:</span>
              <span class="font-semibold text-slate-900">{brand1.pricing.subscriptionType}</span>
            </div>
          </div>

          <a href={`/${brand1Entry.slug}`} class="btn btn-secondary w-full">
            View {brand1.title} Review
          </a>
        </div>

        <!-- Brand 2 Card -->
        <div class="card p-6">
          <div class="flex items-center gap-4 mb-4">
            <div class="flex-1">
              <h3 class="text-2xl font-bold text-slate-900">{brand2.title}</h3>
              <div class="flex items-center gap-2 mt-1">
                <div class="flex items-center">
                  {Array.from({ length: 5 }).map((_, i) => (
                    <svg
                      class={`w-4 h-4 ${i < Math.floor(brand2.rating) ? 'text-yellow-400' : 'text-slate-300'}`}
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                  ))}
                </div>
                <span class="text-sm text-slate-600">{brand2.rating}/5</span>
              </div>
            </div>
          </div>

          <div class="space-y-3 mb-4">
            <div class="flex justify-between">
              <span class="text-slate-600">Consultation:</span>
              <span class="font-semibold text-slate-900">{brand2.pricing.consultationFee}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-slate-600">From:</span>
              <span class="font-semibold text-slate-900">{brand2.pricing.medicationFrom || brand2.pricing.consultationFee}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-slate-600">Subscription:</span>
              <span class="font-semibold text-slate-900">{brand2.pricing.subscriptionType}</span>
            </div>
          </div>

          <a href={`/${brand2Entry.slug}`} class="btn btn-secondary w-full">
            View {brand2.title} Review
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Comparison Table -->
  {comparison.data.comparisonTable && comparison.data.comparisonTable.length > 0 && (
    <section class="section-light">
      <div class="container-custom max-w-4xl">
        <h2 class="text-3xl font-bold text-slate-900 mb-8 text-center">
          Feature Comparison
        </h2>
        <div class="card overflow-hidden">
          <table class="w-full">
            <thead class="bg-slate-50">
              <tr>
                <th class="text-left p-4 font-semibold text-slate-900">Feature</th>
                <th class="text-left p-4 font-semibold text-slate-900">{brand1.title}</th>
                <th class="text-left p-4 font-semibold text-slate-900">{brand2.title}</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-slate-200">
              {comparison.data.comparisonTable.map((row) => (
                <tr>
                  <td class="p-4 font-medium text-slate-900">{row.feature}</td>
                  <td class={`p-4 ${row.winner === '1' ? 'bg-emerald-50 font-semibold text-emerald-900' : 'text-slate-600'}`}>
                    {row.brand1Value}
                    {row.winner === '1' && <span class="ml-2 text-emerald-600">✓</span>}
                  </td>
                  <td class={`p-4 ${row.winner === '2' ? 'bg-emerald-50 font-semibold text-emerald-900' : 'text-slate-600'}`}>
                    {row.brand2Value}
                    {row.winner === '2' && <span class="ml-2 text-emerald-600">✓</span>}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </section>
  )}

  <!-- Main Content -->
  <section class="section bg-white">
    <div class="container-custom max-w-4xl">
      <div class="prose prose-lg max-w-none">
        <Content />
      </div>
    </div>
  </section>

  <!-- Attribution -->
  <section class="section-light">
    <div class="container-custom max-w-3xl">
      <div class="card p-6">
        <div class="flex items-start gap-4">
          <div class="w-12 h-12 rounded-full bg-brand-accent/10 flex items-center justify-center flex-shrink-0">
            <svg class="w-6 h-6 text-brand-accent" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
            </svg>
          </div>
          <div class="flex-1">
            <div class="text-sm text-slate-600 mb-2">
              <span class="font-semibold text-slate-900">Written by:</span> {comparison.data.writtenBy}, {comparison.data.writtenByCredentials}
            </div>
            <div class="text-sm text-slate-600">
              <span class="font-semibold text-slate-900">Medically reviewed by:</span> {comparison.data.medicalReviewer}, {comparison.data.medicalReviewerCredentials}
            </div>
            <div class="text-xs text-slate-500 mt-2">
              Last reviewed: {comparison.data.lastReviewed.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="section bg-slate-900 text-white">
    <div class="container-custom text-center max-w-2xl mx-auto">
      <h2 class="text-2xl sm:text-3xl lg:text-4xl font-bold mb-3 sm:mb-4 px-4">
        Need Help Choosing?
      </h2>
      <p class="text-base sm:text-lg lg:text-xl text-slate-300 mb-6 sm:mb-8 px-4">
        Take our quick quiz to find the best {categoryName.toLowerCase()} service for your needs.
      </p>
      <a href="/#match" class="btn bg-brand-accent hover:bg-brand-accent/90 text-white px-8">
        Find My Match
      </a>
    </div>
  </section>
</BaseLayout>
