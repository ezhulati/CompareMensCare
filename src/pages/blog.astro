---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import { formatDate } from '../utils/helpers';

const allPosts = await getCollection('blog');

// Sort by publish date (newest first)
const sortedPosts = allPosts.sort((a, b) =>
  b.data.publishDate.getTime() - a.data.publishDate.getTime()
);

// Group by category
const categories = ['sexual-health', 'hair-health', 'testosterone', 'weight-loss', 'mental-health', 'diagnostics'] as const;
const categoryNames: Record<string, string> = {
  'sexual-health': 'Sexual Health',
  'hair-health': 'Hair Health',
  'testosterone': 'Testosterone',
  'weight-loss': 'Weight Loss',
  'mental-health': 'Mental Health',
  'diagnostics': 'Diagnostics'
};

// Get featured posts
const featuredPosts = sortedPosts.filter(post => post.data.featured).slice(0, 3);

const schema = {
  '@context': 'https://schema.org',
  '@type': 'Blog',
  name: 'CompareMensCare Blog',
  description: 'Latest news, updates, and insights about men\'s health telehealth services.',
};
---

<BaseLayout
  title="Men's Health Blog | Expert Guides and Comparisons"
  description="Comprehensive guides on ED treatment, hair loss, testosterone therapy, weight loss medications, and mental health with evidence-based research and expert insights."
  schema={schema}
>
  <!-- Hero Section -->
  <section class="bg-gradient-to-br from-brand-primary to-brand-accent text-white py-16">
    <div class="container-custom max-w-6xl text-center">
      <h1 class="text-4xl lg:text-5xl font-bold mb-4">
        Men's Health Blog
      </h1>
      <p class="text-xl lg:text-2xl opacity-90 mb-6">
        Evidence-based guides on telehealth, treatments, and wellness
      </p>
      <p class="text-lg opacity-80">
        {sortedPosts.length} in-depth articles researched by medical experts
      </p>
    </div>
  </section>

  <!-- Featured Posts -->
  {featuredPosts.length > 0 && (
    <section class="section bg-slate-50">
      <div class="container-custom max-w-6xl">
        <h2 class="text-3xl font-bold text-slate-900 mb-8">Featured Articles</h2>
        <div class="grid md:grid-cols-3 gap-8">
          {featuredPosts.map((post) => (
            <a
              href={`/blog/${post.slug}`}
              class="card-hover group"
            >
              <div class="p-6">
                {/* Category Badge */}
                <div class="flex flex-wrap gap-2 mb-3">
                  {post.data.category.map((cat) => (
                    <span class="px-2 py-1 text-xs font-medium text-brand-accent bg-brand-accent/10 rounded-full">
                      {categoryNames[cat] || cat}
                    </span>
                  ))}
                </div>

                {/* Title */}
                <h3 class="text-xl font-bold text-slate-900 mb-3 group-hover:text-brand-accent transition-colors">
                  {post.data.title}
                </h3>

                {/* Description */}
                <p class="text-slate-600 mb-4 line-clamp-3">
                  {post.data.description}
                </p>

                {/* Meta */}
                <div class="flex items-center gap-4 text-sm text-slate-500">
                  <span>{formatDate(post.data.publishDate)}</span>
                  {post.data.researchHours && (
                    <span>• {post.data.researchHours}h research</span>
                  )}
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- All Posts by Category -->
  <section class="section bg-white">
    <div class="container-custom max-w-6xl">
      <h2 class="text-3xl font-bold text-slate-900 mb-8">All Articles</h2>

      {/* Category Filters */}
      <div class="flex flex-wrap gap-3 mb-8">
        <button class="category-filter active px-4 py-2 rounded-full bg-brand-primary text-white font-medium" data-category="all">
          All Posts
        </button>
        {categories.map((cat) => {
          const postsInCategory = sortedPosts.filter(p => p.data.category.includes(cat));
          if (postsInCategory.length > 0) {
            return (
              <button class="category-filter px-4 py-2 rounded-full bg-white text-slate-700 font-medium hover:bg-brand-primary hover:text-white transition-colors" data-category={cat}>
                {categoryNames[cat]} ({postsInCategory.length})
              </button>
            );
          }
        })}
      </div>

      {/* Posts Grid */}
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6" id="posts-grid">
        {sortedPosts.map((post) => (
          <article
            class="post-card card-hover bg-white"
            data-categories={post.data.category.join(',')}>
            <a href={`/blog/${post.slug}`} class="block p-6 h-full flex flex-col">
              {/* Category Badge */}
              <div class="flex flex-wrap gap-2 mb-3">
                {post.data.category.map((cat) => (
                  <span class="px-2 py-1 text-xs font-medium text-brand-accent bg-brand-accent/10 rounded-full">
                    {categoryNames[cat] || cat}
                  </span>
                ))}
              </div>

              {/* Title */}
              <h3 class="text-lg font-bold text-slate-900 mb-2 hover:text-brand-accent transition-colors">
                {post.data.title}
              </h3>

              {/* Description */}
              <p class="text-slate-600 text-sm mb-4 line-clamp-2 flex-grow">
                {post.data.description}
              </p>

              {/* Meta */}
              <div class="flex flex-col gap-2 text-xs text-slate-500 mt-auto">
                <div class="flex items-center gap-3">
                  <span>{formatDate(post.data.publishDate)}</span>
                  {post.data.researchHours && (
                    <span>• {post.data.researchHours}h research</span>
                  )}
                </div>
                {post.data.sourcesReviewed && (
                  <span>{post.data.sourcesReviewed} sources reviewed</span>
                )}
              </div>
            </a>
          </article>
        ))}
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="section bg-slate-50 border-t border-slate-200">
    <div class="container-custom max-w-4xl text-center">
      <h2 class="text-3xl font-bold text-slate-900 mb-4">
        Compare Telehealth Services
      </h2>
      <p class="text-xl text-slate-600 mb-8">
        Find the best service for ED, hair loss, testosterone, weight loss, and mental health.
      </p>
      <a href="/" class="btn-primary inline-flex items-center gap-2">
        Start Comparing
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
        </svg>
      </a>
    </div>
  </section>

  <!-- Category Filter Script -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const filters = document.querySelectorAll<HTMLButtonElement>('.category-filter');
      const posts = document.querySelectorAll<HTMLElement>('.post-card');

      filters.forEach(filter => {
        filter.addEventListener('click', () => {
          const category = filter.dataset.category;

          // Update active state
          filters.forEach(f => f.classList.remove('active', 'bg-brand-primary', 'text-white'));
          filters.forEach(f => f.classList.add('bg-white', 'text-slate-700'));
          filter.classList.add('active', 'bg-brand-primary', 'text-white');
          filter.classList.remove('bg-white', 'text-slate-700');

          // Filter posts
          posts.forEach(post => {
            const postCategories = post.dataset.categories?.split(',') || [];
            if (category === 'all' || postCategories.includes(category || '')) {
              post.style.display = 'block';
            } else {
              post.style.display = 'none';
            }
          });
        });
      });
    });
  </script>
</BaseLayout>
